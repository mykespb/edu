#!/usr/bin/env python
# Mikhail Kolodin, 2023
# 2023-02-08 2023-02-08 1.0
# ya-join-arrays.py

# ~ Задача из яндекса
# ~ Задача F. Слияние $k$ сортированных списков

from random import randint

N = 3

# ~ 1. Делаем случайный набор массивов (всего их N)

def make(num = N):
    ars = []
    for i in range(N):
        ar = [randint(0, 100) for _ in range(randint(1, 10))]
        ar.sort()
        ars += [ar]

    print("Исходные массивы", *ars, sep='\n')
    return ars

# ~ 2. Решаем задачу

def proc1(ars):
    print("Результат:")
    best = []
    for ar in ars:
        best.extend(ar)
    print(best)
    best.sort()
    print(best)


# ~ 3. Тестируем решалку

ars = make()
proc1(ars)

# ~ Даны $k$ отсортированных в порядке неубывания массивов неотрицательных целых чисел, каждое из которых не превосходит 100. Требуется построить результат их слияния: отсортированный в порядке неубывания массив, содержащий все элементы исходных $k$ массивов. Длина каждого массива не превосходит $10\cdot k$.
# ~ Для каждого массива создадим по указателю; изначально каждый указатель расположен в начале соответствующего массива. Элементы, соответствующие позициям указателей, поместим в любую структуру данных, которая поддерживает извлечение минимума — это может быть мультимножество или, например, куча. Далее будем извлекать из этой структуры минимальный элемент, помещать его в ответ, сдвигать позицию указателя в соответствующем массиве и помещать в структуру данных очередной элемент из этого массива.

# ~ В этой задаче многие испытывают сложности с форматом ввода. Обратите внимание на то, что первые элементы строк не описывают элементы массивов, они описывают длины массивов!

#!/usr/bin/env python
# myke 2022-05-14 2025-01-16 3.1
# square1248.py

# ~ Есть квадрат (напр., 10х10), заполненный числами 1, 2, 4, 8.
# ~ Сколько в нём есть квадратиков 2х2, в которых есть все эти цифры - ?
# ~ Показать несколько (не более 9).

from random import randint, choice

SIZE = 10      # размер стороны квадрата
MAXSHOW = 9    # сколько строк показывать

numbers = 1, 2, 4, 8
SUMMA   = sum(numbers)

def gen():
    """генерируем случайный квадрат и возвращаем"""
    return [[choice(numbers) for i in range(SIZE)] for j in range(SIZE)]


def calc(k):
    """считаем квадратики"""
    num = 0
    shown = 0
    for i in range(SIZE-1):
        for j in range(SIZE-1):
            # ~ if sum([k[i][j], k[i][j+1], k[i+1][j], k[i+1][j+1] ]) == SUMMA:
            if k[i][j] + k[i][j+1] + k[i+1][j] + k[i+1][j+1] == SUMMA:
                num += 1
                if shown < MAXSHOW:
                    shown += 1
                    print(f"{num=}, {i=}, {j=}")
                elif shown == MAXSHOW:
                    shown += 1
                    print("and so on...")
                    

    print(f"\ntotal: {num}")
    

def show(k):
    """показываем квадрат"""
    print()
    for i in range(SIZE):
        for j in range(SIZE):
            print("%2d" % (k[i][j],), end="")
        print()
    print()
    

k = gen()
show(k)
calc(k)


# примеры работы


 # ~ 1 4 8 2 8 4 4 4 1 1
 # ~ 8 1 2 2 1 2 8 2 8 4
 # ~ 2 2 4 1 4 1 4 8 1 2
 # ~ 1 1 2 4 8 1 2 8 8 8
 # ~ 2 2 4 8 1 2 2 8 1 4
 # ~ 8 8 2 2 8 8 2 8 1 8
 # ~ 1 4 4 1 8 8 8 8 1 4
 # ~ 8 2 8 4 1 1 8 1 2 8
 # ~ 2 8 8 8 8 4 2 8 4 4
 # ~ 1 1 1 2 1 1 8 8 1 4

# ~ num=1, i=0, j=1
# ~ num=2, i=0, j=4
# ~ num=3, i=0, j=7
# ~ num=4, i=1, j=5
# ~ num=5, i=1, j=8
# ~ num=6, i=6, j=0
# ~ num=7, i=6, j=8
# ~ num=8, i=7, j=5
# ~ num=9, i=7, j=7
# ~ and so on...

# ~ total: 10


 # ~ 8 8 4 4 8 1 8 1 8 4 8 2 2 2 8 2 4 8 4 4
 # ~ 8 4 2 8 8 4 2 2 8 2 4 1 4 8 2 1 4 4 8 8
 # ~ 4 1 1 2 2 4 8 1 1 8 1 1 1 1 8 4 4 8 2 1
 # ~ 4 4 4 4 2 2 1 8 2 1 8 1 2 4 4 8 2 4 1 2
 # ~ 8 2 4 2 1 2 1 1 4 4 4 8 1 1 1 1 1 4 8 4
 # ~ 8 2 2 4 4 1 8 1 8 1 2 8 8 8 4 1 2 4 4 1
 # ~ 8 8 1 4 1 1 4 2 2 4 2 2 2 4 2 8 1 2 4 8
 # ~ 1 8 2 4 1 8 1 1 8 4 8 8 8 4 4 8 4 8 1 2
 # ~ 4 1 2 1 8 1 2 4 2 8 1 1 1 4 4 8 8 1 2 2
 # ~ 8 2 2 8 1 1 2 2 4 4 1 4 4 1 2 1 1 2 1 8
 # ~ 8 4 2 1 1 8 2 1 8 8 8 4 4 8 2 1 4 1 2 8
 # ~ 4 2 2 8 1 8 2 1 4 2 1 4 4 4 4 1 4 2 1 2
 # ~ 8 2 2 1 1 8 2 2 8 4 8 2 8 2 1 4 8 8 8 4
 # ~ 1 2 1 1 2 4 2 4 4 4 4 8 1 4 1 4 4 1 8 4
 # ~ 2 8 2 1 2 1 1 1 2 1 4 1 4 4 4 1 1 8 1 2
 # ~ 2 1 8 4 8 4 2 8 4 2 1 8 4 1 8 1 4 4 2 1
 # ~ 2 1 8 2 4 8 8 1 8 1 8 1 4 4 2 2 1 8 2 1
 # ~ 2 8 4 2 4 8 1 8 8 4 4 4 8 8 8 1 8 1 8 1
 # ~ 4 8 1 1 2 2 2 2 8 4 1 8 2 4 4 4 1 4 4 8
 # ~ 1 8 8 1 1 8 1 1 4 4 8 1 2 1 4 8 2 2 2 8

# ~ num=1, i=0, j=5
# ~ num=2, i=0, j=10
# ~ num=3, i=1, j=9
# ~ num=4, i=1, j=14
# ~ num=5, i=2, j=5
# ~ num=6, i=2, j=17
# ~ num=7, i=3, j=7
# ~ num=8, i=3, j=18
# ~ num=9, i=5, j=6
# ~ and so on...

# ~ total: 34

 

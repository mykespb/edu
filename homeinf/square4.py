#!/usr/bin/env python
# myke 2022-05-11 2022-05-14 2.2
# square4.py

# ~ Есть квадрат (напр., 10х10), заполненный числами 1..4.
# ~ Сколько в нём есть квадратиков 2х2, в которых есть все цифры 1..4 - ?
# ~ Показать несколько (не более 9).

from random import randint

MIN = 1        # мин число в клетке (обычно 0 или 1)
MAX = 4        # макс число в клетке
SIZE = 20      # размер стороны квадрата
MAXSHOW = 9    # сколько строк показывать

# образец для сравнения
pattern = list(range(MIN, MAX+1))
# ~ print("pattern", pattern)


def gen():
    """генерируем случайный квадрат и возвращаем"""
    return [[randint(MIN, MAX) for i in range(SIZE)] for j in range(SIZE)]


def calc(k):
    """считаем квадратики"""
    num = 0
    shown = 0
    for i in range(SIZE-1):
        for j in range(SIZE-1):
            if sorted([k[i][j], k[i][j+1], k[i+1][j], k[i+1][j+1] ]) == pattern:
                num += 1
                if shown < MAXSHOW:
                    shown += 1
                    print(f"{num=}, {i=}, {j=}")
                elif shown == MAXSHOW:
                    shown += 1
                    print("and so on...")
                    

    print(f"\ntotal: {num}")
    

def show(k):
    """показываем квадрат"""
    print()
    for i in range(SIZE):
        for j in range(SIZE):
            print("%2d" % (k[i][j],), end="")
        print()
    print()
    

k = gen()
show(k)
calc(k)


# примеры работы

 # ~ 4 4 4 4 1 4 1 1 2 2
 # ~ 2 3 1 2 2 3 3 2 1 1
 # ~ 1 3 3 3 1 1 1 3 4 3
 # ~ 2 1 1 3 3 4 1 1 4 4
 # ~ 2 2 2 1 3 4 1 2 2 1
 # ~ 3 1 4 2 4 4 4 2 3 4
 # ~ 4 4 2 3 2 1 2 2 4 4
 # ~ 4 1 2 1 1 2 2 1 3 3
 # ~ 3 3 1 4 2 2 1 1 1 1
 # ~ 1 1 2 3 2 1 3 3 4 2

# ~ num=1, i=0, j=4
# ~ num=2, i=1, j=7
# ~ num=3, i=4, j=3
# ~ num=4, i=4, j=8
# ~ num=5, i=6, j=7
# ~ num=6, i=8, j=2

# ~ total: 6

 # ~ 2 3 3 2 1 4 2 4 2 3 4 3 2 4 1 4 3 1 3 3
 # ~ 2 2 1 4 3 3 1 3 4 1 2 4 4 4 4 2 3 1 3 2
 # ~ 4 2 4 3 1 1 1 2 2 2 2 2 3 4 4 4 4 3 3 3
 # ~ 4 2 3 2 1 1 1 4 2 4 1 4 4 4 1 2 3 1 3 1
 # ~ 2 2 3 4 3 1 4 2 1 2 4 2 4 2 3 1 3 4 3 1
 # ~ 1 1 4 1 1 2 4 3 2 3 3 1 3 4 2 3 1 4 3 1
 # ~ 1 4 1 2 3 2 1 1 3 4 1 3 4 2 1 1 2 1 4 2
 # ~ 4 3 4 1 3 1 2 2 2 1 3 3 2 4 1 3 4 2 1 2
 # ~ 2 1 2 1 2 4 3 2 4 2 2 3 3 2 3 4 1 4 2 4
 # ~ 3 2 2 3 1 4 3 4 4 4 3 4 1 4 4 4 2 4 1 1
 # ~ 1 2 3 4 1 4 1 1 4 4 3 3 4 2 4 1 4 1 3 1
 # ~ 1 3 2 2 3 2 3 4 3 2 3 2 3 3 1 4 4 4 3 1
 # ~ 2 4 3 2 4 2 3 3 3 4 4 2 2 2 2 4 4 3 2 4
 # ~ 4 3 4 2 1 4 4 3 4 1 1 4 2 1 4 4 1 4 4 2
 # ~ 1 3 3 1 4 2 1 4 1 3 1 4 3 2 1 2 3 1 1 2
 # ~ 2 1 3 2 2 1 3 1 2 4 3 1 2 1 2 3 3 3 4 1
 # ~ 2 2 1 2 2 3 2 2 3 3 4 1 1 2 2 2 4 2 2 4
 # ~ 3 3 3 2 2 2 3 4 2 2 4 1 4 3 2 1 4 4 2 4
 # ~ 4 3 1 4 4 1 2 2 2 2 1 1 4 3 2 4 3 2 1 4
 # ~ 4 3 2 4 4 2 2 1 1 2 1 3 2 4 3 3 4 3 2 4

# ~ num=1, i=0, j=2
# ~ num=2, i=0, j=3
# ~ num=3, i=0, j=5
# ~ num=4, i=0, j=6
# ~ num=5, i=0, j=8
# ~ num=6, i=0, j=9
# ~ num=7, i=3, j=3
# ~ num=8, i=3, j=13
# ~ num=9, i=4, j=1
# ~ and so on...

# ~ total: 33

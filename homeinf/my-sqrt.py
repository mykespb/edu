#!/usr/bin/env python
# Mikhail (myke) Kolodin, 2024
# 2025-01-18 2025-01-20 1.2
# my-sqrt.py

# ~ Корень

# ~ Найти квадратный корень методом половинного деления.

EPS = 1e-9
TIMES = 1_000

from math import sqrt

# ------------------------------------
# мой квадратный корень

def mysqrt(x = 1.0):

    if 0 <= x <= 1:
        left, right = 0., 1.
    else:
        left, right = 1., x
    test0 = 1e10
    test = left  + (right - left) / 2

    rept = 0
    while abs(test - test0) > EPS and rept < TIMES:
        rept += 1
        if test*test > x:
            right = test
        else:
            left = test
        test0 = test
        test = left  + (right - left) / 2

    return test

# ------------------------------------
# всё протестировать

def main():
    """всё запускаем и смотрим
    """

    print("""
----------------------------------------------------------------------------------------
number          our sqrt        std sqrt        number          our sqrt        std sqrt
----------------------------------------------------------------------------------------
""")

    for x in range(10):
        x1 = x / 10.
        x2 = x * 10.
        print(f"{x1:10.8f}\t{mysqrt(x1):10.8f}\t{sqrt(x1):10.8f}\t{x2:10.8f}\t{mysqrt(x2):10.8f}\t{sqrt(x2):10.8f}")

main()

# ------------------------------------

# ~ ----------------------------------------------------------------------------------------
# ~ number          our sqrt        std sqrt        number          our sqrt        std sqrt
# ~ ----------------------------------------------------------------------------------------

# ~ 0.00000000	0.00000001	0.00000000	0.00000000	0.00000001	0.00000000
# ~ 0.10000000	0.31622777	0.31622777	10.00000000	3.16227766	3.16227766
# ~ 0.20000000	0.44721360	0.44721360	20.00000000	4.47213596	4.47213595
# ~ 0.30000000	0.54772256	0.54772256	30.00000000	5.47722557	5.47722558
# ~ 0.40000000	0.63245554	0.63245553	40.00000000	6.32455532	6.32455532
# ~ 0.50000000	0.70710678	0.70710678	50.00000000	7.07106781	7.07106781
# ~ 0.60000000	0.77459667	0.77459667	60.00000000	7.74596670	7.74596669
# ~ 0.70000000	0.83666002	0.83666003	70.00000000	8.36660027	8.36660027
# ~ 0.80000000	0.89442719	0.89442719	80.00000000	8.94427192	8.94427191
# ~ 0.90000000	0.94868330	0.94868330	90.00000000	9.48683298	9.48683298

# ------------------------------------

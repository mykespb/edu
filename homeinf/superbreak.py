#!/usr/bin/env python

# Mikhail (myke) Kolodin, 2022
# 2022-02-14 2022-02-14 1.2
# superbreak.py

# ~ тема: выход из вложенного цикла

# ~ просто в цикле перебираем и показываем пары чисел

def ver1():
    """версия 1"""
    for i in range(5):
        for j in range(5):
            print(f"({i,j})", end=", ")

# ~ ver1()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), ((0, 3)), ((0, 4)), ((1, 0)), ((1, 1)), ((1, 2)), ((1, 3)), ((1, 4)), ((2, 0)), ((2, 1)), ((2, 2)), ((2, 3)), ((2, 4)), ((3, 0)), ((3, 1)), ((3, 2)), ((3, 3)), ((3, 4)), ((4, 0)), ((4, 1)), ((4, 2)), ((4, 3)), ((4, 4)), 
# ~ ок!

# ~ следующий шаг:
# ~ прекратить вычисления, как только сумма i+j
# ~ станет равной 3

def ver2():
    """версия 2"""
    for i in range(5):
        for j in range(5):
            if i+j == 3:
                break
            print(f"({i,j})", end=", ")
    
# ~ ver2()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), ((1, 0)), ((1, 1)), ((2, 0)), ((4, 0)), ((4, 1)), ((4, 2)), ((4, 3)), ((4, 4)), 

# ~ не то! здесь есть даже сумма 8!

# ~ как же выйти сразу из 2 циклов?

# ~ в питоне нет оператора для выхода из вложенных циклов.

# ~ но можно поработать самим...

def ver3():
    """версия 3"""
    flag = True
    for i in range(5):
        if not flag:
            break
        for j in range(5):
            if i+j == 3:
                flag = False
                break
            print(f"({i,j})", end=", ")
    
# ~ ver3()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), 

# ~ сработало!

# ~ можно и иначе...

def ver4():
    """версия 4"""
    for i in range(5):
        for j in range(5):
            if i+j < 3:
                print(f"({i,j})", end=", ")
    
# ~ ver4()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), ((1, 0)), ((1, 1)), ((2, 0)), 

# ~ сработало!

# ~ но показало и прочие варианты.
# ~ вычисления не были остановлены.
# ~ и много лишних вычислений

# ~ можно и иначе...

def ver5():
    """версия 5"""
    for i in range(5):
        for j in range(5):
            if i+j >= 3:
                break
            print(f"({i,j})", end=", ")
    
# ~ ver5()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), ((1, 0)), ((1, 1)), ((2, 0)), 

# ~ сработало!

# ~ но показало и прочие варианты.
# ~ вычисления не были остановлены.
# ~ и много лишних вычислений

# ~ можно и иначе...

def ver6():
    """версия 6"""
    for k in range(5*5):
        i = k // 5
        j = k % 5
        if i+j == 3:
            break
        print(f"({i,j})", end=", ")
    
# ~ ver6()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), 

# ~ ok

# суперверсия,
# ~ но надо знать исключения,
# ~ т.е. обработку своих исключительных ситуаций

def ver7():
    """версия 7"""
    try:
        for i in range(5):
            for j in range(5):
                if i+j == 3:
                    raise StopIteration
                print(f"({i,j})", end=", ")
    except StopIteration:
        pass
    
# ~ ver7()

# ~ ((0, 0)), ((0, 1)), ((0, 2)), 

# ~ ok

#!/usr/bin/env python3.10

# (C) Mikhail Kolodin, 2021
# 2021-12-23 2021-12-23 0.1

# ~ Какое наибольшее число королей (“разного цвета”) можно расставить на шахматной доске так, чтобы они не били друг друга?
# ~ Решение:
# ~ (мысленно) разделим доску на ячейки по 4 клетки (квадратами 2х2).
# ~ В каждой ячейке может быть не более 1 короля, значит, всего на доске не м.б. более 16.
# ~ А 16 поставить легко: ставим в нижнюю левую клетку в каждой ячейке.

# Вопрос: а сколькими способами это можно сделать?

from pprint import pp
import copy
import itertools

num = 0

gplus = (
    (0, 0), (0, 2), (0, 4), (0, 6), 
    (2, 0), (2, 2), (2, 4), (2, 6), 
    (4, 0), (4, 2), (4, 4), (4, 6), 
    (6, 0), (6, 2), (6, 4), (6, 6)
    )

def check1():
    """ проверить, допустима ли расстановка """

    global b, num
    for i in range(8):
        for j in range(8):
            if b[i][j]:
                for ii in range(-1, 2):
                    for jj in range(-1, 2):
                        if ii == 0 and jj == 0:
                            continue
                        if 0 <= i+ii <= 7 and 0 <= j+jj <= 7:
                            if b[i+ii][j+jj]:
                                return 
    num += 1
    pp (b)
    if num % 10 == 0:
        print (".", end="")


def check2(pos):
    """ проверить, допустима ли расстановка """

    for i in range(16):
        for j in range(16):
            if i == j:
                continue
            di = abs(pos[i][0] - pos[j][0])
            dj = abs(pos[i][1] - pos[j][1])
            if di<2 and dj<2:
                return False
    return True
    

def make():
    """ генерация всех расстановок """
    
    global b, num
            
    for i, comb in enumerate(itertools.product([(0, 0), (0, 1), (1, 0), (1, 1)], repeat=16)):

        pos = [[0, 0] for i in range(16)]
        
        for p in range(16):
            pos[p][0] = gplus[p][0] + comb[p][0]
            pos[p][1] = gplus[p][1] + comb[p][1]

        if check2(pos):
            num += 1
            print(num, pos)
            if num >= 10:
                break


make()                 
print ("всего решений:", num)


# ~ 1 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [6, 4], [6, 6]]
# ~ 2 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [6, 4], [6, 7]]
# ~ 3 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [6, 4], [7, 6]]
# ~ 4 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [6, 4], [7, 7]]
# ~ 5 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [6, 5], [6, 7]]
# ~ 6 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [6, 5], [7, 7]]
# ~ 7 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [7, 4], [6, 6]]
# ~ 8 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [7, 4], [6, 7]]
# ~ 9 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [7, 4], [7, 6]]
# ~ 10 [[0, 0], [0, 2], [0, 4], [0, 6], [2, 0], [2, 2], [2, 4], [2, 6], [4, 0], [4, 2], [4, 4], [4, 6], [6, 0], [6, 2], [7, 4], [7, 7]]
# ~ всего решений: 10

# ~ всего -- очень много,
# ~ нет времени всё посчитать

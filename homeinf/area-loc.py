#!/usr/bin/env python

# Mikhail (myke) Kolodin, 2024
# 2025-01-02 2025-01-02 1.1
# area-loc.py

# ~ На плоскости расположены точки (единицы среди нулей).
# ~ Определить координаты наименьшего охватывающего точки прямоугольника.

from random import randint

WIDTH  = 80
HEIGHT = 30
POINTS = 40


def make() -> list[list]:
    """заполнить поле точками"""

    plain = [ [ 0 for col in range(WIDTH) ] for row in range(HEIGHT) ] 

    for point in range(POINTS):
        plain [ randint(0, HEIGHT-1) ] [ randint(0, WIDTH -1) ] = 1

    return plain


def solve(plain: list[list]) -> list[list]:
    """найти координаты"""

    top = bottom = left = right = None

    for row in range(HEIGHT):
        for col in range(WIDTH):

            if plain[row][col]:
                if top is not None:
                    top = max(top, row)
                else:
                    top = row

                if bottom is not None:
                    bottom = min(bottom, row)
                else:
                    bottom = row

                if left is not None:
                    left = min(left, col)
                else:
                    left = col

                if right is not None:
                    right = max(right, col)
                else:
                    right = col

    return bottom, top, left, right


def show(plain: list[list]) -> None:
    """распечатать поле"""

    for row in range(HEIGHT):
        for col in range(WIDTH):
            print(f"{plain[HEIGHT-row-1][col]:1}", end="")
        print()


def main():
    """запуск"""

    plain = make()

    show(plain)
    
    coord = solve(plain)

    print(f"\nbottom, top, left, right = {coord}\n")


main()


# ~ 00000000000000000010000000000000001000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000010000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000100000000000000000000000000000000010000110000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000100000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00010000000000000000000000000000000100000000010000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00100000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000110000000000000000001000000000000000000000010000000000000000000000000
# ~ 00000000000000000000000000100000000000000000000000000000000000000000000000000000
# ~ 00100000000000000000000000100000000000000000000000000000000000000000000000000000
# ~ 01000000000001000000000000000100000000000000000000000000000100000000000000000000
# ~ 00000000000000000100000001000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00001010000000100000000000000000000000000000000000001000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000010000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000010000000100000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000001000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000100001010000000000000000000000000001000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000010000000000000100000000000000000100000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000
# ~ 00000000000000000000000000000000000000000000000000000000000000000000000000000000

# ~ bottom, top, left, right = (3, 29, 1, 74)

Table of contents
============================

2025-02-03

acq-pairs.py
---------------------------

2024-11-04 2024-11-04 1.0
Даны пары ребят, которые дружат друг с другом.
Но указаны не все пары.
А дружба - симметрична и транзитивна.
Определить, все ли ребята дружат между собой.

akapi.py
---------------------------

2022-04-08 2022-04-08 1.0

Выходят как-то из бара акапи и капибара.

akapi_short.py
---------------------------

2022-04-08 2022-04-23 2.0

Выходят как-то из бара акапи и капибара.
Короткая версия.

alfabravo.py
---------------------------

2022-02-25 2022-02-25 1.0

дан фонетический алфавит
напечатать слова, в которых есть буква А

allsquares.py
---------------------------

2022-03-15 2022-03-15 1.2
Дан текст. В нём есть натуральные числа и 0.
Скажите, все ли эти числа являются квадратами.
Хорошо бы решить однострочником :)

area-loc.py
---------------------------

2025-01-02 2025-01-02 1.1

На плоскости расположены точки (единицы среди нулей).
Определить координаты наименьшего охватывающего точки прямоугольника.

arot1.py
---------------------------

2022-05-05 2022-05-05 1.0

есть случайный список (м.б. 10 элементов, натуральные до 99),
сдвинуть все элементы по кругу, 
0ой становится 1ым, 1ый - 2ым и т.д., 9ый -- 0ым.

arr-2-sum.py
---------------------------

2022-03-17 2022-03-17 1.1

Дан список с упорядоченныи целыми числами и ещё одно целое число.
Найти пару чисел в списке, сумма которых равна этому числу,
либо сказать, что таких чисел нет;
если решений несколько, показать одно любое.
В нашем случае надо воспользоваться доп. функцией give_me_task(),
которая сгенерирует случайное задание.

australia.py
---------------------------

2025-01-19 2025-01-22 1.7

Есть информация об Австралии.
Узнать, где больше территория, где население, где плотность,
сколько там чего (штатов, территорий).
1. что там есть? типы областей
2. у кого самая большая территория?
3. у кого самое большое население?
4. у кого самая большая плотность населения?
Учебное: отрабатываем именованные кортежи.

best-flat-ext.py
---------------------------

2024-12-26 2024-12-26 2.3

а. создаётся случайный список квартир
б. надо найти самую случайную :)
в. надо найти самую дешевую
г. самую большу по площади
д. оптимальную (по отношению площадь / цена, т.е. стоимость кв. метра)
(если вообще есть из чего выбирать :) )

best-flat.py
---------------------------

2024-12-26 2024-12-26 1.0

а. создаётся случайный список квартир
б. надо найти самую случайную :)
в. надо найти самую дешевую
г. самую большу по площади
д. оптимальную (по отношению площадь / цена, т.е. стоимость кв. метра)
(если вообще есть из чего выбирать :) )

best-pupil.py
---------------------------

2024-12-10 2024-12-24 1.5

дан текстовый классный журнал.
определить лучшего ученика (или дать список по этому критерию),
если а) сначала считаем средний балл (выше => лучше),
б) для равных баллов считаем, у кого больше оценок (больше активность => лучше),
в) для равных - у кого последние оценки выше,
г) для равных - по алфавиту,
д) остальное - случайно.
можно просто показать отсортированный список (любого формата).

bestsq.py
---------------------------

2022-05-03 2024-10-28 1.1

Есть квадрат 10х10, заполненный числами  от 0 до 9.
Найти подквадрат 2х2 с максимальной суммой
(если несколько, то любой).

bezcifr100.py
---------------------------

2022-02-23 2022-03-31 1.11

Считаем до 100…
Напечатать натуральные числа до 100 включительно через запятую.
не используя в программе ни одной цифры.

bigroom.py
---------------------------

2021-12-03 2021-12-03 1.0

Юзер вводит пары чисел,
которые представляют собой размеры комнаты
(прямоугольник, длина и ширина, в метрах).
Когда перечисление комнат закончится,
юзер вводит пустую строку.
Найти самую большую комнату.

bin-search.py
---------------------------

2024-10-11 2024-10-11 1.0

binary search in array

bitwise.py
---------------------------

2025-01-30 2025-01-30 1.0

(По)битовые операции -- понятия и упражнения

boxing-all.py
---------------------------

2025-01-12 2025-01-12 1.0

Разложить всё!
Есть набор предметов (указаны их размеры) и набор коробок (указаны их размеры).
Разложить предметы по 1 в каждую коробку (количества коробок и предметов равны) так, чтобы каждый
предмет поместился в своей коробке,
либо сказать, что такая раскладка невозможна.

britain.ipynb
---------------------------

Данные о Великобритании и прочих её территориях.

britain.tab
---------------------------

Данные о Великобритании и прочих её территориях.

britain.tsv
---------------------------

Данные о Великобритании и прочих её территориях.

calc.py
---------------------------

2024-10-30 2024-10-30 1.1

вер.1. простой калькулятор
пользователь вводит строку вида
1 + 2
а программа вычисляет выражение

canada.py
---------------------------

2024-12-10 2024-12-14 1.2

многокритериальные оценки для Канады -- выбор оптимального места для проживания

canada.tab
---------------------------

2024-12-10 2024-12-14 1.2

Данные для расчётов по Канаде.

ceasares.py
---------------------------

2025-01-01 2025-01-06 1.1

Вариации на тему шифра Цезаря
Работаем сразу с несколькими алфавитами,
кружим внутри каждого самого по себе,
а прочее вообще не трогаем, оставляем как есть...

chain-num-1int.py
---------------------------

2025-01-26 2025-01-27 1.1

Цепочки чисел - 2
Даны несколько чисел (это список именно целых чисел).
Верно ли, что они записаны цепочкой вида  13, 356, 671, 1, 12 ?
т.е. последняя цирфа очередного равна первой цифре следующего.
это версия не на строках, а с настоящими целыми числами,
которые надо преобразовывать к строкам для решения

chain-num-1str.py
---------------------------

2025-01-262025-01-27 2.1

Цепочки чисел - 1
Даны несколько чисел (это список строк).
Верно ли, что они записаны цепочкой вида  13, 356, 671, 1, 12 ?
т.е. последняя цирфа очередного равна первой цифре следующего.
это версия просто на строках

check-parens-explain.py
---------------------------

2025-01-16 2025-01-21 2.3

Проверка правильности вложенности скобок.

check-parens.py
---------------------------

2025-01-16 2025-01-21 1.1

Проверка правильности вложенности скобок.

check.py
---------------------------

2024-10-31 2024-10-31 1.1

проверка допустимости различных данных.

1. даты (YYYY-MM-DD, DD.MM.YYYY)
2. ipv4-адреса
3. целые числа

везде есть 3 функции:
- порождающие случайные не всегда корректные данные
- проверяющие 1 элемент данных
- организующие цикл проверки по некоторому принципу

chess-1948.py
---------------------------

2025-01-23 2025-01-23 1.0

Дана турнирная таблица, 
Кто стал победителем турнира и чемпионом мира по шахматам 1948 года?

children-1letter.py
---------------------------

2025-01-23 2025-01-23 1.1

Однобуквенные дети
Есть мальчики и девочки.
На какое минимальное количество групп их можно разделить так, чтобы выполнялись
одновременно все требования:
1. в группе дети только одного пола,
2. все дети в группе имеют имена на одну и ту же букву,
3. группа из 1 человека не создаётся, ребёнка отчисляют до лучших времён.
При печати отсортировать имена по алфавиту.

ch-kings.py
---------------------------

2021-12-23 2021-12-23 0.1

Какое наибольшее число королей (“разного цвета”) можно расставить на шахматной доске так, чтобы они не били друг друга?
Решение:
(мысленно) разделим доску на ячейки по 4 клетки (квадратами 2х2).
В каждой ячейке может быть не более 1 короля, значит, всего на доске не м.б. более 16.
А 16 поставить легко: ставим в нижнюю левую клетку в каждой ячейке.
Вопрос: а сколькими способами это можно сделать?

classmarks_data.py
---------------------------

Данные для classmarks.py

classmarks.py
---------------------------

2022-01-21 2022-04-11 1.0

Есть данные об отметках учеников класса.
Разделить оных на неуспевающих, середнячков и отличников.

class-pairs.py
---------------------------

2022-04-08 2022-04-08 1.0

ДЗ5. Классные пары
В классе есть мальчики и девочки, определяемые как
NUM = 12; ROST = 160; DIFF = 20; ALLOWED = 10
boys  = [ROST+random.randint(-DIFF, DIFF) for n in range(NUM)]
girls = [ROST+random.randint(-DIFF, DIFF) for n in range(NUM)]
Удастся ли их построить в пары “мальчик+девочка”,
если требуется, чтобы их росты в каждой паре
отличались не более чем на ALLOWED см.

closest.py
---------------------------

2022-04-22 2022-04-22 v.1.1

Дан список случайных натуральных чисел.
Найти пару ближайших чисел.
(Если их несколько, показать все).

cnt-digits.py
---------------------------

2021-12-24 2021-12-24 1.1

подсчитать, сколько раз в записи натурального числа встречается каждая цифра

common-comps.py
---------------------------

2022-05-08 2025-01-14 1.5

Несколько человек работали на разные компании.
Есть список человеков.
Переписать его как список компаний с сотрудниками,
а также найти те компании, где работало максимальное количество человек.

countlist.py
---------------------------

2024-12-08 2024-12-09 1.1

Простая задача, много разных решений.
Есть список целых чисел.
Посчитать, сколько в нём каких чисел.
Можно: 
а) показать ответ в упорядоченном виде;
б) вернуть структуру с результатом.

count-odds.py
---------------------------

2025-01-05 2025-01-08 3.2

Сделать список из нескольких (настраивается) чисел, случайно, каждое от 1 до 100 (вкл.).
Подсчитать, каких получилось чисел больше, чётных или нечётных.

count-plus-minus.py
---------------------------

2025-01-18 2025-01-18 1.3

Сложение плюсов и минусов
вида
+++ ----- ++++ + + ---
это
+3 -5 -4 +1 +1 -3
а могут быть с или без пробелов
(на самом деле надо просто посчитать плюсы и минусы и вычесть)

count_rects0.py
---------------------------

2022-04-11 2022-04-12 v.1.1

make non-intersecting rectangles in big rectangle area

count_rects1.py
---------------------------

2022-04-18 2022-04-18 v.2.0

make non-intersecting rectangles in big rectangle area
version with less tests

crossword1.py
---------------------------

2024-11-15 2024-11-16 1.2

Даны 2 слова. Построить кроссворд из этих 2 слов,
т.е. вписать их в пересечённом виде на 2-мерной таблице.
Буквы перевести в верхний регистр, так виднее.

daisy-words.py
---------------------------

2025-01-13 2025-01-13 1.0

Венок слов

Дан набор слов.
Определить, можно ли все эти слова записать так, чтобы каждое последующее слово
начиналось с той же буквы, на которую заканчиавется предыдущее,
и эта последовательность была бы зациклена, 
т.е. первое слово начинается на последнюю букву текста.
Слова из набора можно переставлять в любом порядке.
Нужно найти одно решение, если оно есть,
либо сообщить, что решения нет.

datastr-try.py
---------------------------

2022-05-17 2022-05-19 2.0

опыты над структурами данных
словари и их сортировка

dates-conv.py
---------------------------

2022-04-25 2022-04-25 1.3

конвертор дат 
есть 2 формата YYYY-MM-DD и DD.MM.YYYY
получив строку с датой в одном из этих форматов, 
перевести её в другой из этих- форматов и вернуть как результат

dict_rock_data.py
---------------------------

2022-05-06 2022-05-06 1.0

Есть некоторые сведения о русском роке.
Найти разную полезную информацию.
(сами сведения)

dict_rock.py
---------------------------

2022-05-06 2025-01-06 2.1

Есть некоторые сведения о русском роке.
Найти разную полезную информацию.
(программа для обработки сведений)

dict-sort.py
---------------------------

2022-05-06 2022-05-06 1.0

Как известно, словари - неупорядоченные коллекции (в общем случае).
А как их отсортировать?
Пусть нам достался словарь, для которого мы знаем возможный порядок сортировки,
но в том, что у нас, ключи  значения идут перемешанными.

digits-2025.py
---------------------------

2024-12-30 2024-12-30 1.0

Мы усердно готовились к новому 2025 году и от нетерпения выписали все числа от 1 до 2025 в одну строку.
Сколько раз была написана каждая цифра?

div7.py
---------------------------

2022-04-22 2022-04-23 v.2.1

Дан случайный список.
Распечатать те числа из него, которые делятся на 7, причём в порядке возрастания,
с указанием количества таких чисел

div-by.py
---------------------------

2025-01-03 2025-01-13 1.2

Какое из произведений натуральных чисел до 100 больше -
тех, которые делятся нацело на 3, или тех, которые на 4?

div-sort-dict.py
---------------------------

2022-04-26 2022-04-26 1.1

Первые 100 натуральных чисел упорядочить по количеству их делителей.

div-sort.py
---------------------------

2022-04-26 2022-04-26 1.1

Первые 100 натуральных чисел упорядочить по количеству их делителей.

doctors.py
---------------------------

2025-01-10 2025-01-11 1.6

Два врача принимают клиентов по расписанию.
Вопросы:
1. есть ли дни, когда работают оба?
2. есть ли полностью неприёмные дни?

dopmed.py
---------------------------

2021-11-21 2021-12-16 1.2

определение безопасности лекарств

Надо определить, есть ли в предлагаемом лекарстве опасные вещества.
Процедура такая. Даны две строки.
В первой (danger) - список коротких названий или химических формул опасных веществ (через пробел).
Во второй (proposed) - текст с описанием некоего нового лекарства, которое вы должны разрешить (и, таким образом, допустить к применению на людях) или запретить.
Программа оценивает всё это и сообщает, можно ли использовать такое лекарство.

eo-vortoj.py
---------------------------

2021-12-25 2021-12-25 1.0

Дан текст на эсперанто, состоящий из существительных,
прилагательных, производных наречий и глаголов.
Определить, сколько в тексте каких частей речи.

farenh.py
---------------------------

2022-01-10 2024-07-05 1.2

перевод температуры между градусами Цельсия и Фаренгейта

farenh-sd.py
---------------------------

2022-01-10 2022-01-29 2.0

перевод температуры между градусами Цельсия и Фаренгейта

fibs-gen.py
---------------------------

2024-11-02 2024-11-02 2.1

числа Фибоначчи, генераторы

fibs.py
---------------------------

2022-01-21 2022-01-21 0.1

числа Фибоначчи, просто

find2same.py
---------------------------

2022-08-26 2022-08-29 2.0

задача про носки.
есть ящик с чёрными носками разного размера (от 20 до 40),
найти пару одного размера (всего там 10 штук).

а. создать список с 2 одинаковыми натур. числами
б. найти эти 2 числа

find-fairy.py
---------------------------

2025-01-03 2025-01-08 1.2

Есть повествовательный текст на русском языке.
Найти и напечатать те предложения,
в которых упоминаются заданные сказочные перcонажи.
Персонажи - список через запятую, по каждой сказке отдельная строка,
все в именительном падеже.
В тесте предложения разделены точками, всё идёт подряд,
возможно, одним абзацем.

find-pairs.py
---------------------------

2024-10-11 2024-10-11 1.1
найти пару одинаковых соседних чисел в матрице
(соседство - по горизонтали или вертикали)

fly-trains.py
---------------------------

2021-11-26 2021-11-26 1.1

про поезда и муху между ними

Постановка задачи.
Из города А в город Б, между которыми расстояние dab,
вышел поезд со скоростью va км/ч,
одновременно из Б в А тоже вышел поезд со скоростью vb км/ч.
Вместе с поездом А с его лобового стекла слетела муха
и полетела навстречу поезду Б со скоростью vk км/ч
(vm > va, vm > vb).
Встретив поезд, Б муха тут же развернулась и полетела навстречу
поезду А и т.п.
Сколько пролетит муха, прежде чем поезда встретятся?

foobar.py
---------------------------

2024-11-18

Write a program that prints the numbers from 1 to 100.
But for multiples of three print “Foo” instead of the number
and for the multiples of five print “Bar”.
For numbers which are multiples of both three and five print “FooBar”.

friday13.py
---------------------------

2025-01-17 2025-01-22 1.2

Пятница 13ое
Считается, что этот день несчастный.
Верите вы в это или нет, но знать об опасности надо :)
Определить. есть ли в нынешнем году пятница 13, в какие месяцы,
и сколько дней осталось до ближайшей пятницы 13го. когда бы она ни случилась.

geo-order.py
---------------------------

2025-01-12 2025-01-25 1.2

География по порядку

Даны названия населённых пунктов в России,
а. выписать их по алфавиту,
б. проверить, в данной тестовой строке все ли названия даны по алфавиту.

guess-half.py
---------------------------

2022-02-05 2022-02-20 1.1

Человек и машина играют в такую игру:
человек загадывает натуральное число в некотором диапазоне (напр., от 1 до 100),
а машина пытается угадать это число.
При этом загадавший отвечает на вопросы только “да” или “нет”.
Нужно справиться с отгадыванием за наименьшее количество попыток.

habitat.py
---------------------------


happy4.py
---------------------------


happy-any.py
---------------------------


happy-iter.py
---------------------------


happy-np.py
---------------------------


hardy-0.py
---------------------------


hardy-1.py
---------------------------


hardy-2.py
---------------------------


hilldown.py
---------------------------


himnabory.py
---------------------------


hist-hor.py
---------------------------


hny2025.py
---------------------------


holmes.py
---------------------------

# ~ Герои Конан Дойля
# ~ -----------------------------------------------

2025-01-31 2025-01-31 1.0

Даны герои и их контакты.
Разделить героев на группы.

Пример: 
Джон Уотсон, Шерлок Холмс
Шерлок Холмс, Майкрофт Холмс
Джеймс Мориарти, Себастьян Моран, Чарльз Огастес Милвертон
Тобиас Грегсон, Этелни Джоунс
Мэри Морстен, Джон Уотсон
Дж. Лестрейд, Тобиас Грегсон, Брэдстрит
Шерлок Холмс, миссис Хадсон
миссис Хадсон, Джон Уотсон
Чарльз Огастес Милвертон, Джеймс Мориарти

даёт (по алфавиту):
группа 1 : Брэдстрит, Дж. Лестрейд, Тобиас Грегсон, Этелни Джоунс
группа 2 : Джеймс Мориарти, Себастьян Моран, Чарльз Огастес Милвертон
группа 3 : Джон Уотсон, Майкрофт Холмс, миссис Хадсон, Мэри Морстен, Шерлок Холмс

houston.py
---------------------------

2025-01-19 2025-01-24 1.1
matvej: ok

Во время полёта космического корабля "Аполлон 13" (США) экипаж сообщил
в ЦУП (Центр Управления Полётами NASA) о неисправности фразой,
которая стала знаменитой (хотя и была потом в фильме произнесена неточно).
Как была указана неисправность и когда о ней сообщили впервые?"

howmany-array.py
---------------------------

2022-04-15 2022-04-15 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-bigvar.py
---------------------------

2022-04-15 2022-04-15 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-counter.py
---------------------------

2022-04-15 2022-04-15 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-defdict.py
---------------------------

2022-04-15 2022-04-15 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-dict.py
---------------------------

2022-04-08 2022-04-14 2.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-int.py
---------------------------

2022-04-08 2022-04-08 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-vars-match.py
---------------------------

2022-04-15 2022-04-15 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

howmany-vars.py
---------------------------

2022-04-15 2022-04-15 1.1

ДЗ2. Сколько каких?
Дан случайный список вида
from random import randint as ri
a = [ri(0, 10) for _ in range(10)]
Определить, сколько каких чисел в нём.

inteam.py
---------------------------

2021-12-02 2021-12-11 1.2

В научном исследовании принимает участие азиопский коллектив.
Имена участников заданы строкой и разделены запятыми.
Определить, сколько участников каких национальностей (численно и в процентах)
участвуют, если известно следующее.
В именах корейцев всегда присутствует слово Ким.
Фамилии русских заканичваются на "ов", "ин", "ова", "ина", "ев", "ева".
В именах китайцев нет "р".
В именах японцев нет "л".

пример коллектива:
Иван Иванов, Василий Пупкин, Ким Мин Пан, По Си Дим Ли, Поку Рим,
Александр Иванов, Бо Си Ким, К. Сидорова,
Пешкомморепереходищева,

inter-rects.py
---------------------------

2024-12-28 2024-12-31 OK 2.2

На бесконечной плоскости размещены квадраты с указанной длиной стороны,
указаны также координаты нижных левых углов квадратов.
Квадраты занимают целые ячейки,
позиционирование идёт по левым нижним углам.
Определить, какие квадраты пересекаются (вывести их координаты).

irr-verbs.py
---------------------------

2025-01-18 2025-01-19 1.2
Неправильные глаголы
Обработать по-всякому
(напр., совпадают 2 любые формы, или совпадают все 3 формы)

is_clockwise.py
---------------------------

2025-01-07 2025-01-08 1.0

Дан квадрат 2х2.
Верно ли, что в нём числа стоят по возрастанию по часовой стрелке
(начиная с любой клетки)?

isnumber.py
---------------------------

2021-11-26 2021-11-30 1.2

Человек вводит строку,
а машина определяет,
является ли эта строка целым числом
(возможно, со знаком).
Игра идёт по кругу, пока человек не введёт пустую строку
или строку из одной точки.""")

iters1.py
---------------------------

2021-12-03 2025-01-21 1.1

игры с итераторами

jbond.py
---------------------------

2022-04-30 2022-04-30 1.1

изучение словарей на примере Дж.Бонда и Ш.Холмса

julian.py
---------------------------

2021-11-15 2021-11-15 1.1

В юлианском календаре, в отличие от используемого нами сейчас григорианского,
не отменяются високосные годы для номеров, которые делятся на 100,
но не на 400 (в т.ч. для 1900, 2100…).
Если бы это расхождение календарей началось прямо от Рождества Христова,
то когда бы мы теперь отмечали Новый год?

knignt-order.py
---------------------------

2024-12-14 2024-12-14 1.2
knight-order.py
На шахматной доске стоит конь (по умолчанию - на А1 = [0, 0]). Это позиция 0.
Отметить числами клетки доски в соответствии с тем, на каком минимальном ходу конь может оказаться на соотв. клетке.

knignt-order-que.py
---------------------------

2024-12-27 2024-12-27 2.3

На шахматной доске стоит конь (по умолчанию - на А1 = [0, 0]). Это позиция 0.
Отметить числами клетки доски в соответствии с тем, на каком минимальном ходу конь может оказаться на соотв. клетке.
Решить рекурсивно вширь, т.е. с очередью.

langage-data.py
---------------------------


langage.py
---------------------------


langton-1.py
---------------------------


lcom-starter.py
---------------------------


lcom-test.py
---------------------------


linear-eq.py
---------------------------

Решение линейных уравнений.
a, b -> x / {}

list-chessboard.py
---------------------------


list-compare-counter.py
---------------------------


list-compare.py
---------------------------


list-compare-rem.py
---------------------------


list-comp-ex.py
---------------------------


listcompreh.py
---------------------------


list-info.py
---------------------------


list-klass.py
---------------------------


list-maxnum.py
---------------------------


list-max.py
---------------------------


list-mdim.py
---------------------------


list-same-set.py
---------------------------


list-search-simple.py
---------------------------


list-zavod.py
---------------------------


long-row.py
---------------------------


long-signs.py
---------------------------

2025-01-23 2025-01-23 3.1

Длинные серии знаков
Даны последовательности (в 1+ строках) вида
(знаки разделены пробелами))
Найти самую длинную из них, указав длину и из каких знаков состоит.

long-strings.py
---------------------------


longstr.py
---------------------------


loopexcept.py
---------------------------


loto.py
---------------------------


lyshrel-196.py
---------------------------

2025-01-06 2025-01-10 1.1

проверить число на палиндромную сходимость
и сказать, на каком шаге получен палиндром --
проблема 196

lyshrel-196-stat.py
---------------------------

2025-01-06 2025-01-10 2.0

проверить число на палиндромную сходимость
и сказать, на каком шаге получен палиндром --
проблема 196
просчитать статистику -- для большого числа шагов
и на больших числах.

make-uniq.py
---------------------------


malchik.py
---------------------------


mat-filler.py
---------------------------


matrix-nums.py
---------------------------

2025-01-15 2025-01-15 1.0

Найти максимальное число из цифр
Есть прямоугольная матрица десятичных цифр. 
Многие клетки заполнены нулями.
Ненулевые клетки образуют натуральные числа.
Найти максимальное.
Иизвестно, что:
1. записи чисел не конфликтуют, т.е. не накладываются друг на друга никоим образом,
кроме предписанного.
варианты:
+а. Числа записаны просто по горизонтали.
+б. Числа могут быть записаны по кругу, т.е. из крайнего правого столбца переходят в крайний левый.
-в. Числа могут быть записаны только по вертикали.
-г. Числа могут быть записаны и по горизонтали, и по вертикали, но они не пересекаются.
-д.... или пересекаются.

maxpair.py
---------------------------


max-sum-digits.py
---------------------------

2025-01-16 2025-01-16 1.1

Найти число с макс. суммой цифр (натуральное, из случано заданного набора)

max-triangle.py
---------------------------


meet2025.py
---------------------------


merge-sort-1.py
---------------------------


merge-sort-2.py
---------------------------


merge-sort-3.py
---------------------------


min-lang.py
---------------------------


mk-mults.py
---------------------------


mkrects.py
---------------------------


mk-turtle01.py
---------------------------


mk-uuids.py
---------------------------


more-vocals.py
---------------------------


mousquetaires.py
---------------------------

2025-01-27 2025-01-27 2.2

Три мушкетёра
Кое-что сообщено про мушкетёров и их слуг,
в соответствии с романами А.Дюма-отца.
Уточните кое-что из этого всего.

my-sqrt.py
---------------------------


names-ordered.py
---------------------------

2025-01-11 2025-01-25 1.2

Имена по порядку
Дан набор имён.
Определить, идут ли они в алфавитном порядке.

net-send.py
---------------------------

2025-02-03 2025-02-03 1.0

Сетевые посылки простые

По сети передаются байты.
Они содержат порции информации, котоорые нужно распознать и обработать.
Каждая порция состоит из префикса, заголовка, содержимого, суффикса.
Каждая из этих частей - последовательность байтов.
В полученном наборе данных не отмечены начала,
это просто кусок передаваемой по сети информации.
Мусор - шум - ошибки - есть только между сообщениями.
В содержимом есть сообщение, записанное латиницей в коде ASCII.
Прочитать всё, что получится.
Префикс = 0 1
Суффикс = 0 2
Заголовок = 0 3 длина
где длина есть длина сообщения в байтах.
Содержимое = байты (не 0)... 
Декодировать полученные сообщения.

Пример:
45 56 22 0 45 0 23 0 1 0 3 5 72 69 76 7 679 0 0 0 2 34 34 0 1 0 3 32 33 126 0 3 1 2 3 1 2 1
HELLO !~

nytree.py
---------------------------


o-ecodev.py
---------------------------


often-fun.py
---------------------------


o-gorode.py
---------------------------


o-levels.py
---------------------------


o-planets.py
---------------------------


otrezki.py
---------------------------


overlap.py
---------------------------


over-sched-1.py
---------------------------


over-sched-2.py
---------------------------


over-sched-3.py
---------------------------


packer.py
---------------------------


pair-color.py
---------------------------


papers23.py
---------------------------


papers23src.py
---------------------------


papersizes.py
---------------------------


para-inword.py
---------------------------


params.py
---------------------------


para-palin.py
---------------------------


parrots_data.py
---------------------------


parrots.py
---------------------------


pass-prompter.py
---------------------------

2024-12-31 2024-12-31 1.1

Подсказки для создания паролей.
Многие с трудом придумывают пароли.
Поможем им.
Пусть пароли все будут такими:
cvcvdddd либо vcvcdddd
где v = volwel, c = consonant, d = digit (не 0),
все латинские, регистр произвольный, но у всех букв одинаковый.

pentagon.py
---------------------------


peri-1.py
---------------------------


pihalf.py
---------------------------


piplold-data.py
---------------------------


piplold.py
---------------------------


piplold-same.py
---------------------------


planes-suit.py
---------------------------


plus-minus.py
---------------------------


populaty_local.py
---------------------------


populaty_local.tab
---------------------------


populaty.py
---------------------------


populaty.tab
---------------------------


possible-sum.py
---------------------------


primes1.py
---------------------------


pupils-usa.py
---------------------------


q2592.py
---------------------------


rainbow.py
---------------------------

2025-02-01 2025-02-01 1.0

Про радугу

Даны 7 названий цветов.
Верно ли, что они образуют радугу (в любом порядке, но по порядку цветов радуги).
Т.е.
а) верно ли, что все слова соответствуют радуге, причём обязательно в прямом либо обратном порядке
(и все по 1 разу)?
б) ... но порядок произвольный, но все по 1 разу?
в) среди данных слов есть в т.ч.и цвета радуги, в любом порядке... в прямом либо обратном порядке... по 1 разу?

regdrob.py
---------------------------


rept-words.py
---------------------------


rev-array.py
---------------------------


revnum.py
---------------------------


rev-strings.py
---------------------------


rock_ddt_data.py
---------------------------


rock_ddt.py
---------------------------


rodion.py
---------------------------

2025-01-28 2025-01-28 1.0

Родион Раскольников по Садовой улице проходил вдоль Юсуповского сада — до дома, где жила старуха-процентщица. 
"Идти ему было немного; он даже знал, сколько шагов от ворот его дома: ровно семьсот тридцать. Как-то раз он их сосчитал, когда уж очень размечтался."
Потом он стало скучно и он стал скакать на одной ноге по нескольку шагов за один раз,
пробовал и по 3 шага за раз, и по 4, и по 5, и по 6, и по 7, и по 8, и по 9, и так всю дорогу одинаковыми скачками.
Когда у него получалось оказаться точно у двери дома старухи?
Тяжестью топора пренебречь.

rus_rock_data.py
---------------------------


rus_rock.py
---------------------------


ru-taxes.py
---------------------------


ryg-colors.py
---------------------------


same-cities.py
---------------------------


same-strings.py
---------------------------


sequences.py
---------------------------


set-list.py
---------------------------


simple-math.py
---------------------------


simple-matrix.py
---------------------------


simple-sort.py
---------------------------


slogi.py
---------------------------


some5.py
---------------------------


sort-bubbles.py
---------------------------


sort-count.py
---------------------------


sort-extern.py
---------------------------


sort-recollect.py
---------------------------


spb-districts.py
---------------------------


spb-districts.tab
---------------------------


spiral-nums.py
---------------------------


square1248.py
---------------------------


square4.py
---------------------------


subsquares.py
---------------------------


sumkubdig.py
---------------------------


superbreak.py
---------------------------


tecumseh.py
---------------------------


test-lists.py
---------------------------


test-palin.py
---------------------------


text-square.py
---------------------------


t-knb.py
---------------------------


t-machtest2.py
---------------------------


tme12345.py
---------------------------


toc.txt
---------------------------


todo-ext.md
---------------------------


todo.md
---------------------------


tolstoy.py
---------------------------


t-rand-squares.py
---------------------------


trans.py
---------------------------


t-squares.py
---------------------------


tup-mt.py
---------------------------


tur-fun-1.py
---------------------------


turtle-1.py
---------------------------


turtle-x0.py
---------------------------


tusovka.py
---------------------------

2025-01-17 2025-01-17 1.1

Где тусуемся?
Даны наборы типичных имён по разным странам
(имена могут быть более чем в одной стране, напр., "Михаил").
Дан список имён с тусовки.
Определить, в какой стране тусуемся.
Т.е. откуда большинство имён.

usa-states-local.py
---------------------------


usa-states-order.py
---------------------------


usa-states.py
---------------------------


usa-states.tab
---------------------------


usp.py
---------------------------


venv
---------------------------


what-lang.py
---------------------------


whatword.py
---------------------------


word2sames.py
---------------------------


word-fl.py
---------------------------


word-pal.py
---------------------------


words_loop.py
---------------------------


zerkala.py
---------------------------


zerna.py
---------------------------



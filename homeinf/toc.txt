Table of contents
============================

2025-01-28

acq-pairs.py
---------------------------

2024-11-04 2024-11-04 1.0
Даны пары ребят, которые дружат друг с другом.
Но указаны не все пары.
А дружба - симметрична и транзитивна.
Определить, все ли ребята дружат между собой.

akapi.py
---------------------------

2022-04-08 2022-04-08 1.0

Выходят как-то из бара акапи и капибара.

akapi_short.py
---------------------------

2022-04-08 2022-04-23 2.0

Выходят как-то из бара акапи и капибара.
Короткая версия.

alfabravo.py
---------------------------

2022-02-25 2022-02-25 1.0

вот фонетический алфавит
напечатать слова, в которых есть буква А

allsquares.py
---------------------------

2022-03-15 2022-03-15 1.2
Дан текст. В нём есть натуральные числа и 0.
Скажите, все ли эти числа являются квадратами.
Хорошо бы решить однострочником :)

area-loc.py
---------------------------

2025-01-02 2025-01-02 1.1

На плоскости расположены точки (единицы среди нулей).
Определить координаты наименьшего охватывающего точки прямоугольника.

arot1.py
---------------------------

2022-05-05 2022-05-05 1.0

есть случайный список (м.б. 10 элементов, натуральные до 99),
сдвинуть все элементы по кругу, 
0ой становится 1ым, 1ый - 2ым и т.д., 9ый -- 0ым.

arr-2-sum.py
---------------------------

2022-03-17 2022-03-17 1.1

Дан список с упорядоченныи целыми числами и ещё одно целое число.
Найти пару чисел в списке, сумма которых равна этому числу,
либо сказать, что таких чисел нет;
если решений несколько, показать одно любое.
В нашем случае надо воспользоваться доп. функцией give_me_task(),
которая сгенерирует случайное задание.

australia.py
---------------------------

2025-01-19 2025-01-22 1.7

Есть информация об Австралии.
Узнать, где больше территория, где население, где плотность,
сколько там чего (штатов, территорий).
1. что там есть? типы областей
2. у кого самая большая территория?
3. у кого самое большое население?
4. у кого самая большая плотность населения?
Учебное: отрабатываем именованные кортежи.

best-flat-ext.py
---------------------------


best-flat.py
---------------------------


best-pupil.py
---------------------------

2024-12-10 2024-12-24 1.5

дан текстовый классный журнал.
определить лучшего ученика (или дать список по этому критерию),
если а) сначала считаем средний балл (выше => лучше),
б) для равных баллов считаем, у кого больше оценок (больше активность => лучше),
в) для равных - у кого последние оценки выше,
г) для равных - по алфавиту,
д) остальное - случайно.
можно просто показать отсортированный список (любого формата).

bestsq.py
---------------------------


bezcifr100.py
---------------------------


bigroom.py
---------------------------


bin-search.py
---------------------------


boxing-all.py
---------------------------


britain.ipynb
---------------------------


britain.tab
---------------------------


britain.tsv
---------------------------


calc.py
---------------------------


canada.py
---------------------------


canada.tab
---------------------------


ceasares.py
---------------------------

2025-01-01 2025-01-06 1.1

Вариации на тему шифра Цезаря
Работаем сразу с несколькими алфавитами,
кружим внутри каждого самого по себе,
а прочее вообще не трогаем, оставляем как есть...

chain-num-1int.py
---------------------------

2025-01-26 2025-01-27 1.1

Цепочки чисел - 2
Даны несколько чисел (это список именно целых чисел).
Верно ли, что они записаны цепочкой вида  13, 356, 671, 1, 12 ?
т.е. последняя цирфа очередного равна первой цифре следующего.
это версия не на строках, а с настоящими целыми числами,
которые надо преобразовывать к строкам для решения

chain-num-1str.py
---------------------------

2025-01-262025-01-27 2.1

Цепочки чисел - 1
Даны несколько чисел (это список строк).
Верно ли, что они записаны цепочкой вида  13, 356, 671, 1, 12 ?
т.е. последняя цирфа очередного равна первой цифре следующего.
это версия просто на строках

check-parens-explain.py
---------------------------


check-parens.py
---------------------------


check.py
---------------------------


chess-1948.py
---------------------------


children-1letter.py
---------------------------

2025-01-23 2025-01-23 1.1

Однобуквенные дети
Есть мальчики и девочки.
На какое минимальное количество групп их можно разделить так, чтобы выполнялись
одновременно все требования:
1. в группе дети только одного пола,
2. все дети в группе имеют имена на одну и ту же букву,
3. группа из 1 человека не создаётся, ребёнка отчисляют до лучших времён.
При печати отсортировать имена по алфавиту.

ch-kings.py
---------------------------


classmarks_data.py
---------------------------


classmarks.py
---------------------------


class-pairs.py
---------------------------


closest.py
---------------------------


cnt-digits.py
---------------------------


common-comps.py
---------------------------


countlist.py
---------------------------


count-odds.py
---------------------------


count-plus-minus.py
---------------------------

2025-01-18 2025-01-18 1.3

Сложение плюсов и минусов
вида
+++ ----- ++++ + + ---
это
+3 -5 -4 +1 +1 -3
а могут быть с или без пробелов
(на самом деле надо просто посчитать плюсы и минусы и вычесть)

count_rects0.py
---------------------------


count_rects1.py
---------------------------


crossword1.py
---------------------------


daisy-words.py
---------------------------


datastr-try.py
---------------------------


dates-conv.py
---------------------------


dict_rock_data.py
---------------------------

2022-05-06 2022-05-06 1.0

Есть некоторые сведения о русском роке.
Найти разную полезную информацию.
(сами сведения)

dict_rock.py
---------------------------

2022-05-06 2025-01-06 2.1

Есть некоторые сведения о русском роке.
Найти разную полезную информацию.
(программа для обработки сведений)

dict-sort.py
---------------------------


digits-2025.py
---------------------------


div7.py
---------------------------


div-by.py
---------------------------


div-sort-dict.py
---------------------------


div-sort.py
---------------------------


doctors.py
---------------------------


dopmed.py
---------------------------


eo-vortoj.py
---------------------------


farenh.py
---------------------------


farenh-sd.py
---------------------------


fibs-gen.py
---------------------------


fibs.py
---------------------------


find2same.py
---------------------------


find-fairy.py
---------------------------


find-pairs.py
---------------------------


fly-trains.py
---------------------------


foobar.py
---------------------------


friday13.py
---------------------------

2025-01-17 2025-01-22 1.2

Пятница 13ое
Считается, что этот день несчастный.
Верите вы в это или нет, но знать об опасности надо :)
Определить. есть ли в нынешнем году пятница 13, в какие месяцы,
и сколько дней осталось до ближайшей пятницы 13го. когда бы она ни случилась.

geo-order.py
---------------------------


guess-half.py
---------------------------


habitat.py
---------------------------


happy4.py
---------------------------


happy-any.py
---------------------------


happy-iter.py
---------------------------


happy-np.py
---------------------------


hardy-0.py
---------------------------


hardy-1.py
---------------------------


hardy-2.py
---------------------------


hilldown.py
---------------------------


himnabory.py
---------------------------


hist-hor.py
---------------------------


hny2025.py
---------------------------


houston.py
---------------------------

2025-01-19 2025-01-24 1.1
matvej: ok

Во время полёта космического корабля "Аполлон 13" (США) экипаж сообщил
в ЦУП (Центр Управления Полётами NASA) о неисправности фразой,
которая стала знаменитой (хотя и была потом в фильме произнесена неточно).
Как была указана неисправность и когда о ней сообщили впервые?"

howmany-array.py
---------------------------


howmany-bigvar.py
---------------------------


howmany-counter.py
---------------------------


howmany-defdict.py
---------------------------


howmany-dict.py
---------------------------


howmany-int.py
---------------------------


howmany-vars-match.py
---------------------------


howmany-vars.py
---------------------------


inteam.py
---------------------------


inter-rects.py
---------------------------


irr-verbs.py
---------------------------

2025-01-18 2025-01-19 1.2
Неправильные глаголы
Обработать по-всякому
(напр., совпадают 2 любые формы, или совпадают все 3 формы)

is_clockwise.py
---------------------------

2025-01-07 2025-01-08 1.0

Дан квадрат 2х2.
Верно ли, что в нём числа стоят по возрастанию по часовой стрелке
(начиная с любой клетки)?

isnumber.py
---------------------------


iters1.py
---------------------------


jbond.py
---------------------------


julian.py
---------------------------


knignt-order.py
---------------------------


knignt-order-que.py
---------------------------


langage-data.py
---------------------------


langage.py
---------------------------


langton-1.py
---------------------------


lcom-starter.py
---------------------------


lcom-test.py
---------------------------


list-chessboard.py
---------------------------


list-compare-counter.py
---------------------------


list-compare.py
---------------------------


list-compare-rem.py
---------------------------


list-comp-ex.py
---------------------------


listcompreh.py
---------------------------


list-info.py
---------------------------


list-klass.py
---------------------------


list-maxnum.py
---------------------------


list-max.py
---------------------------


list-mdim.py
---------------------------


list-same-set.py
---------------------------


list-search-simple.py
---------------------------


list-zavod.py
---------------------------


long-row.py
---------------------------


long-signs.py
---------------------------

2025-01-23 2025-01-23 3.1

Длинные серии знаков
Даны последовательности (в 1+ строках) вида
(знаки разделены пробелами))
Найти самую длинную из них, указав длину и из каких знаков состоит.

long-strings.py
---------------------------


longstr.py
---------------------------


loopexcept.py
---------------------------


loto.py
---------------------------


lyshrel-196.py
---------------------------

2025-01-06 2025-01-10 1.1

проверить число на палиндромную сходимость
и сказать, на каком шаге получен палиндром --
проблема 196

lyshrel-196-stat.py
---------------------------

2025-01-06 2025-01-10 2.0

проверить число на палиндромную сходимость
и сказать, на каком шаге получен палиндром --
проблема 196
просчитать статистику -- для большого числа шагов
и на больших числах.

make-uniq.py
---------------------------


malchik.py
---------------------------


mat-filler.py
---------------------------


matrix-nums.py
---------------------------

2025-01-15 2025-01-15 1.0

Найти максимальное число из цифр
Есть прямоугольная матрица десятичных цифр. 
Многие клетки заполнены нулями.
Ненулевые клетки образуют натуральные числа.
Найти максимальное.
Иизвестно, что:
1. записи чисел не конфликтуют, т.е. не накладываются друг на друга никоим образом,
кроме предписанного.
варианты:
+а. Числа записаны просто по горизонтали.
+б. Числа могут быть записаны по кругу, т.е. из крайнего правого столбца переходят в крайний левый.
-в. Числа могут быть записаны только по вертикали.
-г. Числа могут быть записаны и по горизонтали, и по вертикали, но они не пересекаются.
-д.... или пересекаются.

maxpair.py
---------------------------


max-sum-digits.py
---------------------------

2025-01-16 2025-01-16 1.1

Найти число с макс. суммой цифр (натуральное, из случано заданного набора)

max-triangle.py
---------------------------


meet2025.py
---------------------------


merge-sort-1.py
---------------------------


merge-sort-2.py
---------------------------


merge-sort-3.py
---------------------------


min-lang.py
---------------------------


mk-mults.py
---------------------------


mkrects.py
---------------------------


mk-turtle01.py
---------------------------


mk-uuids.py
---------------------------


more-vocals.py
---------------------------


mousquetaires.py
---------------------------

2025-01-27 2025-01-27 2.2

Три мушкетёра
Кое-что сообщено про мушкетёров и их слуг,
в соответствии с романами А.Дюма-отца.
Уточните кое-что из этого всего.

my-sqrt.py
---------------------------


names-ordered.py
---------------------------

2025-01-11 2025-01-25 1.2

Имена по порядку
Дан набор имён.
Определить, идут ли они в алфавитном порядке.

nytree.py
---------------------------


o-ecodev.py
---------------------------


often-fun.py
---------------------------


o-gorode.py
---------------------------


o-levels.py
---------------------------


o-planets.py
---------------------------


otrezki.py
---------------------------


overlap.py
---------------------------


over-sched-1.py
---------------------------


over-sched-2.py
---------------------------


over-sched-3.py
---------------------------


packer.py
---------------------------


pair-color.py
---------------------------


papers23.py
---------------------------


papers23src.py
---------------------------


papersizes.py
---------------------------


para-inword.py
---------------------------


params.py
---------------------------


para-palin.py
---------------------------


parrots_data.py
---------------------------


parrots.py
---------------------------


pass-prompter.py
---------------------------

2024-12-31 2024-12-31 1.1

Подсказки для создания паролей.
Многие с трудом придумывают пароли.
Поможем им.
Пусть пароли все будут такими:
cvcvdddd либо vcvcdddd
где v = volwel, c = consonant, d = digit (не 0),
все латинские, регистр произвольный, но у всех букв одинаковый.

pentagon.py
---------------------------


peri-1.py
---------------------------


pihalf.py
---------------------------


piplold-data.py
---------------------------


piplold.py
---------------------------


piplold-same.py
---------------------------


planes-suit.py
---------------------------


plus-minus.py
---------------------------


populaty_local.py
---------------------------


populaty_local.tab
---------------------------


populaty.py
---------------------------


populaty.tab
---------------------------


possible-sum.py
---------------------------


primes1.py
---------------------------


pupils-usa.py
---------------------------


__pycache__
---------------------------


q2592.py
---------------------------


regdrob.py
---------------------------


rept-words.py
---------------------------


rev-array.py
---------------------------


revnum.py
---------------------------


rev-strings.py
---------------------------


rock_ddt_data.py
---------------------------


rock_ddt.py
---------------------------


rodion.py
---------------------------

2025-01-28 2025-01-28 1.0

Родион Раскольников по Садовой улице проходил вдоль Юсуповского сада — до дома, где жила старуха-процентщица. 
"Идти ему было немного; он даже знал, сколько шагов от ворот его дома: ровно семьсот тридцать. Как-то раз он их сосчитал, когда уж очень размечтался."
Потом он стало скучно и он стал скакать на одной ноге по нескольку шагов за один раз,
пробовал и по 3 шага за раз, и по 4, и по 5, и по 6, и по 7, и по 8, и по 9, и так всю дорогу одинаковыми скачками.
Когда у него получалось оказаться точно у двери дома старухи?
Тяжестью топора пренебречь.

rus_rock_data.py
---------------------------


rus_rock.py
---------------------------


ru-taxes.py
---------------------------


ryg-colors.py
---------------------------


same-cities.py
---------------------------


same-strings.py
---------------------------


sequences.py
---------------------------


set-list.py
---------------------------


simple-math.py
---------------------------


simple-matrix.py
---------------------------


simple-sort.py
---------------------------


slogi.py
---------------------------


some5.py
---------------------------


sort-bubbles.py
---------------------------


sort-count.py
---------------------------


sort-extern.py
---------------------------


sort-recollect.py
---------------------------


spb-districts.py
---------------------------


spb-districts.tab
---------------------------


spiral-nums.py
---------------------------


square1248.py
---------------------------


square4.py
---------------------------


subsquares.py
---------------------------


sumkubdig.py
---------------------------


superbreak.py
---------------------------


tecumseh.py
---------------------------


test-lists.py
---------------------------


test-palin.py
---------------------------


text-square.py
---------------------------


t-knb.py
---------------------------


t-machtest2.py
---------------------------


tme12345.py
---------------------------


toc.txt
---------------------------


todo-ext.md
---------------------------


todo.md
---------------------------


tolstoy.py
---------------------------


t-rand-squares.py
---------------------------


trans.py
---------------------------


t-squares.py
---------------------------


tup-mt.py
---------------------------


tur-fun-1.py
---------------------------


turtle-1.py
---------------------------


turtle-x0.py
---------------------------


tusovka.py
---------------------------

2025-01-17 2025-01-17 1.1

Где тусуемся?
Даны наборы типичных имён по разным странам
(имена могут быть более чем в одной стране, напр., "Михаил").
Дан список имён с тусовки.
Определить, в какой стране тусуемся.
Т.е. откуда большинство имён.

usa-states-local.py
---------------------------


usa-states-order.py
---------------------------


usa-states.py
---------------------------


usa-states.tab
---------------------------


usp.py
---------------------------


venv
---------------------------


what-lang.py
---------------------------


whatword.py
---------------------------


word2sames.py
---------------------------


word-fl.py
---------------------------


word-pal.py
---------------------------


words_loop.py
---------------------------


zerkala.py
---------------------------


zerna.py
---------------------------


